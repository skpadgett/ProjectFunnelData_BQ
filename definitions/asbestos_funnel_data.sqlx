/*

* Upon running this query, a table schema.table_name will be created in your warehouse, where schema is the Dataform schema defined in your dataform.json file and table_name is the name of this file

* Learn more on https://docs.dataform.co/guides/datasets/

*/

config { type: "view" }

WITH mds AS (
    SELECT DISTINCT 
        "Marketing Data C".id AS md_id,
        redis_id__c,
        createddate AS md_createddatetime,
        CASE when id is not null then 1 else null end AS mds,
        "Marketing Data C".adwords_campaign__c AS campaign__c,
        "Marketing Data C".adwords_adgroup__c as adgroup__c,
        "Marketing Data C".keyword_id__c as keyword__c,
        "Marketing Data C".adwords_creative__c as creative__c,
  "Marketing Data C".website__c as website,
        CASE "Marketing Data C".utm_source__c
            WHEN 'google' THEN 'Adwords'
            WHEN 'adwords' THEN 'Adwords'
            WHEN 'bing' THEN 'Bing'
            WHEN 'facebook' THEN 'Facebook'
  			WHEN 'yahoo' THEN 'Gemini'
 			WHEN 'quora' THEN 'Quora'
        ELSE "Marketing Data C".utm_source__c end AS source,
 "Marketing Data C".lead_type__c as lead_type,
 case when "Marketing Data C".paid__c is true then 'Paid' else 'Organic' end as paid__c
  
    FROM
        lt_pa_salesforce.marketing_data__c AS "Marketing Data C" 
    WHERE
        "Marketing Data C".website__c in('asbestos.com', 'pleuralmesothelioma.com', 'mesotheliomaprognosis.com')
      --  AND utm_source__c in ('google', 'adwords', 'bing', 'facebook', 'yahoo', 'quora')      
 
        AND "Marketing Data C".createddate::date > '2016-12-31'   
        AND test_or_spam__c IS false   
       -- AND paid__c IS false
 -- and ((adwords_campaign__c not in ('1749684874', '127158429', '113139549', '228077589', '1045949468')) or (adwords_campaign__c is null))
    and isdeleted is false

),
leads AS (     
    SELECT DISTINCT 
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c IS not null then 1 else null end AS leads,
  lead.createddate as lead_createddatetime
    FROM
        lt_pa_salesforce.lead AS Lead 
        INNER JOIN mds on Lead.marketing_data_attribution__c = mds.md_id
    WHERE
        Lead.test_or_spam__c IS FALSE        
        AND Lead.source__c NOT ILIKE '%PA%DID%'
       -- AND Lead.parent_campaign_name__c ILIKE '%paid%'  
        AND Lead.createddate::date > '2016-12-31'
  and lead.isdeleted is false
),     
qualified_leads AS (
    SELECT DISTINCT
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c IS not null then 1 else null end AS qualified_leads
    FROM
        lt_pa_salesforce.account AS Account 
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
    WHERE
        Account.u_s_exposure__c IN ('Yes', 'Unknown')        
        AND Account.currently_represented__c IN ('Unknown','No', 'Yes, after arrival')        
        AND Account.effect__c ILIKE '%Mesothelioma%'   
        and Account.createddate::date > '2016-08-01'
      --  AND Account.parent_campaign_name__c ILIKE '%PAID%'
  and lead.isdeleted is false
  and account.isdeleted is false
),
customers_setup As (
    SELECT DISTINCT
        lead.marketing_data_attribution__c AS md_id,
        COALESCE(Opportunity.signing_value_override__c,Opportunity.signing_value__c) AS customers,
 Opportunity.stage_signed_date_time__c as opportunity_signeddatetime
    FROM 
        lt_pa_salesforce.account AS Account
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
        INNER JOIN lt_pa_salesforce.opportunity as Opportunity ON account.id = opportunity.accountid
    WHERE 
        Account.effect__c ILIKE '%Mesothelioma%'
     --   AND Account.parent_campaign_name__c ILIKE '%paid%'
        AND Opportunity.stage_signed_date_time__c is not null
        AND account.createddate::date > '2016-08-01'
  and lead.isdeleted is false
  and account.isdeleted is false
  and opportunity.isdeleted is false
),
customers AS (
    SELECT DISTINCT
        md_id,
        customers,
  		opportunity_signeddatetime
    FROM
        customers_setup
    WHERE
        customers > 0
),
-- START CUSTOM ASBESTOS ONLY METRICS
viables AS (
    SELECT DISTINCT
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c is not null then 1 else null end AS viables
    FROM
        lt_pa_salesforce.account AS Account
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
    WHERE 
       ((Account.viable_rollback__c IS false) OR  (Account.viable_rollback__c IS null))
        AND Account.first_viable_date__c IS NOT NULL
  and Account.effect_ever_meso__c is true
      --  AND Account.parent_campaign_name__c ILIKE '%PAID%'
        AND Account.createddate::date > '2016-08-01'
  and lead.isdeleted is false
  and account.isdeleted is false
),
acct_sendovers AS (
    SELECT DISTINCT 
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c is not null then 1 else null end AS acct_sendovers,
  Opportunity.stage_sendover_date_time__c as opportunity_sendoverdatetime
    FROM 
        lt_pa_salesforce.account AS Account
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
        INNER JOIN lt_pa_salesforce.opportunity AS Opportunity ON account.id = opportunity.accountid
    WHERE
     --   Account.parent_campaign_name__c ILIKE '%paid%' AND
         Account.u_s_exposure__c = 'Yes'
        AND Account.opportunity__c IS NOT NULL
        AND Opportunity.stage_sendover_date_time__c IS NOT NULL
        AND Opportunity.effect__c ILIKE '%Mesothelioma%'
         -- 11/25/19 right now these criteria are causing signed cases to not show as 'meetings'. a broader discussion needs to be had regarding how we want to treat the funnel steps if a customer doesn't meet the criteria but ends up signing anyway
        AND Account.within_statute_of_limitations__c = 'Yes'
        AND Account.currently_represented__c IN ('No', 'Yes, after arrival')
        AND account.createddate::date > '2016-08-01'
  and lead.isdeleted is false
  and account.isdeleted is false
  and opportunity.isdeleted is false
),
acct_meetings_scheduled AS (
    SELECT DISTINCT
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c is not null then 1 else null end AS acct_meetings_scheduled,
  Opportunity.stage_meeting_scheduled_date_time__c as opportunity_meetingdatetime
    FROM 
        lt_pa_salesforce.account AS Account
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
        INNER JOIN lt_pa_salesforce.opportunity as Opportunity ON account.id = opportunity.accountid
    WHERE 
        Account.effect__c ILIKE '%Mesothelioma%' 
        AND Account.u_s_exposure__c = 'Yes'
      --  AND Account.parent_campaign_name__c ILIKE '%paid%'  
        AND Opportunity.stage_meeting_scheduled_date_time__c IS not null  
        -- 11/25/19 right now these criteria are causing signed cases to not show as 'meetings'. a broader discussion needs to be had regarding how we want to treat the funnel steps if a customer doesn't meet the criteria but ends up signing anyway
        AND Account.within_statute_of_limitations__c = 'Yes'
        AND Account.currently_represented__c IN ('No', 'Yes, after arrival')
        AND account.createddate::date > '2016-08-01'
  and lead.isdeleted is false
  and account.isdeleted is false
  and opportunity.isdeleted is false
),
meso_form_leads AS ( 
    SELECT DISTINCT
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c is not null then 1 else null end AS meso_form_leads
    FROM
        lt_pa_salesforce.lead AS Lead  
        INNER JOIN mds AS mds ON Lead.marketing_data_attribution__c = mds.md_id
    WHERE
        Lead.test_or_spam__c IS FALSE        
        AND Lead.createddate::date > '2016-12-31'
        AND lead.effect__c ILIKE '%Mesothelioma%'  
      --  AND lead.parent_campaign_name__c ILIKE '%paid%'   
        AND lead.marketing_data_type__c IN ('Form')  
        AND Lead.source__c NOT ILIKE '%PA%DID%'
  and lead.isdeleted is false
),
accounts AS (   
    SELECT DISTINCT
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c is not null then 1 else null end AS accounts,
  account.createddate as account_createddatetime
    FROM
        lt_pa_salesforce.account AS Account 
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
    WHERE 
     --   account.parent_campaign_name__c ILIKE '%paid%' AND
         account.test__c IS false 
        AND account.createddate::date > '2016-08-01'
  and lead.isdeleted is false
  and account.isdeleted is false
),   
meso_accounts AS (   
    SELECT DISTINCT 
        lead.marketing_data_attribution__c AS md_id,
        CASE when Lead.marketing_data_attribution__c is not null then 1 else null end AS meso_accounts
    FROM
        lt_pa_salesforce.account AS Account
        INNER JOIN lt_pa_salesforce.lead AS Lead ON account.lead_attribution__c = lead.id
        INNER JOIN mds ON lead.marketing_data_attribution__c = mds.md_id
    WHERE 
       -- account.parent_campaign_name__c ILIKE '%paid%'  AND
        account.effect__c ILIKE '%Mesothelioma%'    
        AND account.test__c IS false
        AND account.createddate::date > '2016-08-01'
  and lead.isdeleted is false
 and account.isdeleted is false   
  
)--, end_data as (
-- END CUSTOM ASBESTOS ONLY METRICS
-- Final data selection
SELECT DISTINCT
    A.md_id,
    A.redis_id__c AS lead_id,
    A.md_createddatetime::timestamp AS md_createddate,
	B.lead_createddatetime::timestamp as lead_createddate,
	D.account_createddatetime::timestamp as account_createddate,
	H.opportunity_sendoverdatetime::timestamp as sendover_date,
	I.opportunity_meetingdatetime::timestamp as meeting_date,
	J.opportunity_signeddatetime::timestamp as customer_signeddate,
    CASE A.source
        WHEN 'AdWords' THEN '1'::varchar
        WHEN 'Bing' THEN '2'::varchar
    ELSE '-1'::varchar end AS account_id,
    A.campaign__c::varchar AS campaign_id,
    A.adgroup__c::varchar AS adgroup_id,
    A.keyword__c::varchar AS keyword_id,
    A.creative__c::varchar AS creative_id,
      A.source::varchar,
  A.website::varchar,
  A.lead_type::varchar,
  A.paid__c::varchar,
    COALESCE(A.mds,0)::int2 AS is_md,
    COALESCE(B.leads,0)::int2 AS is_lead,
   COALESCE(C.meso_form_leads,0)::int2 as is_meso_form_lead,
  COALESCE(D.accounts,0)::int2 as is_account,
  COALESCE(E.meso_accounts,0)::int2 as is_meso_account,
      COALESCE(F.qualified_leads,0)::int2 AS is_qualified_lead,
  COALESCE(G.viables,0)::int2 as is_viable,
  COALESCE(H.acct_sendovers,0)::int2 as is_account_sendover,
  COALESCE(I.acct_meetings_scheduled,0)::int2 as is_account_meeting,
    COALESCE(J.customers,0)::decimal(4,2) AS is_customer

  
FROM mds AS A
    LEFT JOIN leads AS B ON A.md_id = B.md_id
    LEFT JOIN meso_form_leads AS C ON A.md_id = C.md_id
    LEFT JOIN accounts AS D ON A.md_id = D.md_id
    LEFT JOIN meso_accounts AS E ON A.md_id = E.md_id
    LEFT JOIN qualified_leads AS F ON A.md_id = F.md_id
    LEFT JOIN viables AS G ON A.md_id = G.md_id
    LEFT JOIN acct_sendovers AS H ON A.md_id = H.md_id
    LEFT JOIN acct_meetings_scheduled AS I ON A.md_id = I.md_id
    LEFT JOIN customers AS J ON A.md_id = J.md_id

